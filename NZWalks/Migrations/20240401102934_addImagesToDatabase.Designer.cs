// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.Data;

#nullable disable

namespace NZWalks.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20240401102934_addImagesToDatabase")]
    partial class addImagesToDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.Models.Domain.Diffculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diffculties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78ad2ed7-695e-458a-93a4-acf616e7a9e6"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("d6cb3e68-ded2-47fe-beb2-116df7c2f63b"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("d9a355ae-e2e8-4a28-bd0c-55361063cf7a"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtenstion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ef37571-b117-46c3-a336-70423107e3e2"),
                            Code = "AKL",
                            Name = "Acukland",
                            RegionImageUrl = "Photo by Thirdman from Pexels: https://www.pexels.com/photo/mixing-acrylic-paint-with-a-chisel-6732552/"
                        },
                        new
                        {
                            Id = new Guid("8180fd18-496e-4cde-a7bd-68e072cd805d"),
                            Code = "NTL",
                            Name = "NorthLand",
                            RegionImageUrl = "Photo by Nurgül  Kelebek  from Pexels: https://www.pexels.com/photo/white-ceramic-mug-on-white-ceramic-saucer-13708881/"
                        },
                        new
                        {
                            Id = new Guid("9e0d1edc-9a01-4c11-9454-b571a52f2280"),
                            Code = "BOP",
                            Name = "Bay Of Plenty",
                            RegionImageUrl = "Photo by igovar igovar from Pexels: https://www.pexels.com/photo/grayscale-photo-of-man-in-polo-shirt-with-birds-5815451/"
                        },
                        new
                        {
                            Id = new Guid("4bc0d799-646e-4862-94aa-fa546ae91661"),
                            Code = "STL",
                            Name = "SouthLand",
                            RegionImageUrl = "Photo by Finn Semmer from Pexels: https://www.pexels.com/photo/lonely-20590852/"
                        });
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DiffcultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiffcultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.Models.Domain.Diffculty", "Diffculty")
                        .WithMany()
                        .HasForeignKey("DiffcultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diffculty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
